---
interface Props {
  title: string;
  url: string;
}

const { title, url } = Astro.props;
const encodedUrl = encodeURIComponent(url);
const encodedTitle = encodeURIComponent(title);
const shareText = encodeURIComponent(`Read more on Izvir, a new social media network`);

// Generate sharing URLs
const shareUrls = {
  twitter: {
    url: `https://twitter.com/intent/tweet?text=${encodedTitle}&url=${encodedUrl}`,
    color: '#1DA1F2'
  },
  facebook: {
    url: `https://www.facebook.com/sharer/sharer.php?u=${encodedUrl}`,
    color: '#1877F2'
  },
  linkedin: {
    url: `https://www.linkedin.com/sharing/share-offsite/?url=${encodedUrl}`,
    color: '#0A66C2'
  },
  whatsapp: {
    url: `https://wa.me/?text=${encodedTitle}%20${encodedUrl}`,
    color: '#25D366'
  },
  telegram: {
    url: `https://t.me/share/url?url=${encodedUrl}&text=${encodedTitle}`,
    color: '#0088cc'
  },
  instagram: {
    url: `/api/share-image?title=${encodedTitle}&text=${shareText}`,
    color: 'linear-gradient(45deg, #fa7e1e, #d62976, #962fbf)'
  },
  email: {
    url: `mailto:?subject=${encodedTitle}&body=${shareText}%20${encodedUrl}`,
    color: '#666666'
  }
};
---

<div class="share-post mt-8 border-t border-gray-800 pt-6">
  <h3 class="text-lg font-semibold mb-4">Share this post</h3>
  <div class="flex flex-wrap gap-3 share-buttons">
    <!-- Twitter -->
    <a href={shareUrls.twitter.url} target="_blank" rel="noopener noreferrer" 
       class="share-button" data-network="twitter"
       style={`--network-color: ${shareUrls.twitter.color}`}
       aria-label="Share on Twitter">
      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
        <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
      </svg>
      <span>Twitter</span>
    </a>

    <!-- Facebook -->
    <a href={shareUrls.facebook.url} target="_blank" rel="noopener noreferrer" 
       class="share-button" data-network="facebook"
       style={`--network-color: ${shareUrls.facebook.color}`}
       aria-label="Share on Facebook">
      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
        <path fill-rule="evenodd" d="M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z" clip-rule="evenodd" />
      </svg>
      <span>Facebook</span>
    </a>

    <!-- LinkedIn -->
    <a href={shareUrls.linkedin.url} target="_blank" rel="noopener noreferrer" 
       class="share-button" data-network="linkedin"
       style={`--network-color: ${shareUrls.linkedin.color}`}
       aria-label="Share on LinkedIn">
      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
        <path fill-rule="evenodd" d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z" clip-rule="evenodd" />
      </svg>
      <span>LinkedIn</span>
    </a>

    <!-- WhatsApp -->
    <a href={shareUrls.whatsapp.url} target="_blank" rel="noopener noreferrer" 
       class="share-button" data-network="whatsapp"
       style={`--network-color: ${shareUrls.whatsapp.color}`}
       aria-label="Share on WhatsApp">
      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
        <path fill-rule="evenodd" d="M20.463 3.488C18.217 1.24 15.231 0 12.05 0 5.495 0 .16 5.334.157 11.892c0 2.096.546 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893 0-3.181-1.237-6.167-3.48-8.413zM12.05 21.785h-.004a9.86 9.86 0 01-5.031-1.378l-.36-.214-3.74.981 1-3.648-.235-.374a9.84 9.84 0 01-1.51-5.26c0-5.445 4.435-9.88 9.887-9.88 2.641 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.445-4.437 9.881-9.888 9.881z" clip-rule="evenodd" />
        <path fill-rule="evenodd" d="M17.254 14.893c-.298-.149-1.758-.868-2.031-.967-.272-.099-.47-.149-.669.15-.198.297-.768.966-.941 1.164-.173.198-.347.223-.644.074-.297-.149-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.297-.347.446-.521.149-.174.198-.298.297-.496.099-.198.05-.372-.025-.521-.074-.149-.669-1.612-.916-2.207-.241-.579-.486-.501-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.273.297-1.04 1.016-1.04 2.479 0 1.463 1.065 2.876 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.57-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347z" clip-rule="evenodd" />
      </svg>
      <span>WhatsApp</span>
    </a>

    <!-- Telegram -->
    <a href={shareUrls.telegram.url} target="_blank" rel="noopener noreferrer" 
       class="share-button" data-network="telegram"
       style={`--network-color: ${shareUrls.telegram.color}`}
       aria-label="Share on Telegram">
      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
        <path fill-rule="evenodd" d="M22.05 2.038c.3-.041.443.276.543.544.1.268.182.576.182.874 0 .298-.023.596-.064.894-.742 4.85-2.904 16.796-3.526 20.12-.246 1.314-.742 1.762-1.223 1.802-.48.04-1.063-.199-1.544-.438-.962-.477-2.484-1.314-3.686-1.99-.721-.398-2.484-1.632-1.864-2.507.541-.755 3.207-2.945 5.492-4.906.441-.378.182-.894-.36-.378-2.163 2.07-5.69 5.173-6.793 6.169-.661.596-1.143.675-1.984.437-1.063-.298-2.304-.755-3.046-1.034-1.223-.437-1.103-1.074-.02-1.632l11.843-7.403c1.143-.715 2.284-1.472 3.046-1.99.761-.517 1.504-1.154 2.004-.676z" clip-rule="evenodd" />
      </svg>
      <span>Telegram</span>
    </a>

    <!-- Instagram -->
    <a href={shareUrls.instagram.url} target="_blank" rel="noopener noreferrer" 
       class="share-button" data-network="instagram"
       style={`--network-color: ${shareUrls.instagram.color}`}
       aria-label="Share on Instagram">
      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
        <path fill-rule="evenodd" d="M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z" clip-rule="evenodd" />
      </svg>
      <span>Instagram</span>
    </a>

    <!-- Email -->
    <a href={shareUrls.email.url}
       class="share-button" data-network="email"
       style={`--network-color: ${shareUrls.email.color}`}
       aria-label="Share via Email">
      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
      </svg>
      <span>Email</span>
    </a>
  </div>
</div>

<style>
  .share-button {
    @apply flex items-center gap-2 px-4 py-2 rounded-lg text-gray-400 transition-colors duration-75;
    background-color: #2d2d2d;
  }

  .share-button:hover {
    @apply text-white;
    background-color: var(--network-color);
  }

  /* Special case for Instagram gradient */
  .share-button[data-network="instagram"].active {
    background: var(--network-color);
  }

  .share-button.active {
    @apply text-white;
    background-color: var(--network-color);
  }
</style>

<script>
  const BUTTON_ACTIVE_TIME = 100; // Each button lights up for 100ms
  const BUTTON_DELAY = 100; // 100ms between buttons
  const SEQUENCE_IDLE_TIME = 10000; // 10 seconds between sequences
  
  function resetAllButtons() {
    document.querySelectorAll('.share-button').forEach(button => {
      button.classList.remove('active');
    });
  }

  async function animateButton(button) {
    button.classList.add('active');
    await new Promise(resolve => setTimeout(resolve, BUTTON_ACTIVE_TIME));
    button.classList.remove('active');
    await new Promise(resolve => setTimeout(resolve, BUTTON_DELAY));
  }

  async function runSequence() {
    const buttons = Array.from(document.querySelectorAll('.share-button'));
    
    // Animate each button in sequence
    for (const button of buttons) {
      await animateButton(button);
    }

    // Wait 10 seconds before next sequence
    await new Promise(resolve => setTimeout(resolve, SEQUENCE_IDLE_TIME));
    runSequence(); // Start next sequence
  }
  
  // Start first sequence after a short delay
  setTimeout(() => runSequence(), 1000);

  const IMAGE_SERVICE_URL = 'http://localhost:3001';
  
  let shareImageBlob = null;
  
  async function prepareImage() {
    try {
      const title = document.querySelector('h1')?.textContent || '';
      const imageUrl = `${IMAGE_SERVICE_URL}/generate?title=${encodeURIComponent(title)}&text=Read%20more%20on%20Izvir`;
      
      // First check if service is running
      const healthCheck = await fetch(`${IMAGE_SERVICE_URL}/health`).catch(() => null);
      if (!healthCheck?.ok) {
        throw new Error('Image service is not running. Please start the service.');
      }

      console.log('Fetching image from:', imageUrl);
      const response = await fetch(imageUrl);
      
      if (!response.ok) {
        const errorData = await response.json().catch(() => ({ error: 'Unknown error' }));
        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);
      }

      const contentType = response.headers.get('content-type');
      if (!contentType || !contentType.includes('image/')) {
        throw new Error('Invalid response type: ' + contentType);
      }

      shareImageBlob = await response.blob();
      console.log('Image blob received:', shareImageBlob.size, 'bytes');
      return true;
    } catch (error) {
      console.error('Error preparing image:', error);
      alert(error.message || 'Failed to generate image. Please try again.');
      return false;
    }
  }

  async function shareToInstagram(event) {
    event.preventDefault();
    
    const button = event.currentTarget;
    const originalText = button.innerHTML;
    button.innerHTML = 'Preparing...';
    button.disabled = true;

    try {
      if (!shareImageBlob) {
        const prepared = await prepareImage();
        if (!prepared) {
          throw new Error('Failed to prepare image');
        }
      }

      const title = document.querySelector('h1')?.textContent || '';
      const file = new File([shareImageBlob], 'izvir-post.png', { type: 'image/png' });
      
      if (navigator.share && navigator.canShare({ files: [file] })) {
        await navigator.share({
          files: [file],
          title: 'Share on Instagram',
          text: title
        });
      } else {
        // Fallback: Open image in new tab for manual saving
        const blobUrl = URL.createObjectURL(shareImageBlob);
        window.open(blobUrl, '_blank');
        URL.revokeObjectURL(blobUrl);
      }
    } catch (error) {
      console.error('Error sharing to Instagram:', error);
      if (error.name !== 'AbortError') { // Don't show error if user cancelled
        alert(error.message || 'Failed to share. Please try again.');
      }
    } finally {
      button.innerHTML = originalText;
      button.disabled = false;
    }
  }

  // Add click handler to Instagram button
  document.querySelector('[data-network="instagram"]')?.addEventListener('click', shareToInstagram);
</script>
